** 3.1 Getting started

For the first query E<> P.s3 witch means that there exist a possible future where P.s3 holds. The result is that the property is satisfied witch is true since there is a possible sequence of state transitions leading form the initial state to s3.
An example sequence : S0 -> S1 -> S3

For the second query A<> P.s3 witch means that all possible sequence of states that eventually leads to P.s3. The property is not satisfied since there is no way to ensure that there is such a sequence. This is due to the fact that there is nothing forcing the states to change.
An example sequence: S0     The state machine will stay in S0 for infinity. 

** 3.2 Fisher 1
For this assignment we try to predict the verification time for fisher with n = 12. We used a android phone to measure time since uppaal doesn't report it.

- n : 8     1s  
- n : 9     2s
- n : 10    6s
- n : 11    20s  
- n : 12    120s (Our guess) 

It seems to be a factorial increment of time.

** 3.3 Fisher 2
If m < k then the mutex requirement will not be satisfied. An example of this is the sequence:

/(-,-,-,-) -> (req,-,-,-) -> (req,req,-,-) -> (wait,req,-,-) -> (cs,req,-,-) -> (cs,wait,-,-) -> (cs,cs,-,-)/

If m >= k then mutex requirement will be satisfied.

*** 3.4 Traffic Light Controller
The Traffic light timed automata have three templates. Two for the traffic lights and one controller. The reason that we chose to have two templates for the traffic light instead of one is because there is a slight difference between north and south compared to east and west. 

We have a integer called transfer that behaves like a four byte number. We use this to define seven states of the system, north, south, east, west, north-south, east-west or none. To do this each traffic direction is initialized with a id, 1,2,4,8; these are then added and subtracted form transfer when a light goes to and from green respectively. This enables us to define states be checking the value of transfer, if it's less the 4 for example the state is 1&2. Less then 2 the state is 1 and so on.

*** Traffic Light Template 
The template has three states, /idle/ (red light), /wait/ (there are cars waiting) and /Green/ (green light). To force the system to transit state the edge form /wait/ to /Green/ is triggered be a channel form the controller while /Green/ has a timed invariant. 

*** Controller 
The controller has to states that it switches between on a timed interval. The edges form NS to WE triggers one channel for the WE traffic light and vice versa for the edge form WE to NS but with an other channel.

** 3.5 Alternating Bit Protocol 
